コメントはなるべく書いておく

トップページはindex.PHPで命名

insert_formはinsert_pageに名前を変更
insert_prosessをinsert.phpに名前を変更

editも同様
deleteも同様

prosessは流れだけを書くファイル
edit.phpは機能をだけを書くページ

ファイル名を統一する、phpはスネークで書く事が多い。
DBはdb.phpまたはdb_conect.php

浅い階層にはページと機能のファイルを作る

設定項目はconfig.phpに入れて各自呼び出す。


DB接続できなかったときエラーを書く

　わかりにくい処理はコメントを残す。

dsnはなんの略？

●result.phpのレビュー
ヘッター、フッターは別で用意
乱用するものは変数で用意しておく


カテゴリーだけを別ファイルで作るアイディア
DBにカテゴリーテーブルを作ると追加しやすい
検索フォーム自体を別ページに作るのもいいよね

HTMLとPHPは分けて書く、書くなら変数を呼び出すだけ

タグは長くさせすぎないこと
縦より横に長い方が嫌

メソットを作って処理を呼び出す

HTMLはスペースを極力なくすのがベター

インデントの整理


●insert_formのレビュー
phpはHTMLの上に書く

divで分けて開業を演出

時間は0-23
分は0-59

nanth=month

なんかいれるdisplay_date_option_loop

functionは機能だから＞どうし、めいしで書く。

labelはひとまとまりにすること（テキストを押すと選択される）

＜丸々　／＞の／はいらない


●insert_prosese
shape_dateは$dateでいいんでない？

try_catchに入る前にバリテーションの処理を入れる。


トランザクションを使う。全部できることを確認して実行するパターン
エラーの場合はフォームに戻してエラーメッセージを出す。

文字列の場合は変数にして入れた方がスマート

メソッットに対して直接文字列は入れたくない


まとめ
HTMLとPHPがこんざいするとインデントがずれるから分けよう。
機能と過程と表示は分けた方がいいよね。
小さい単位で機能をまとめた方がいいよね。
